{"ast":null,"code":"var _jsxFileName = \"/home/lntinfotech/Desktop/ReactWorkspace/react-test/src/Views/Get/Get.js\";\nimport React, { Component } from 'react';\nimport './Get.css';\nimport HomeHeader from '../Header/HomeHeader';\nimport Footer from '../Footer/Footer';\nimport axios from 'axios';\nvar data = [];\n\nclass HomePage extends Component {\n  constructor() {\n    super();\n\n    this.onPost = () => {\n      this.props.history.push('/Post');\n    };\n\n    this.getData = () => {\n      alert(\"loading\");\n      axios.get('http://localhost:8000/route/posts', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'content-type': 'application/json'\n        }\n      }).then(responseJson => {\n        console.log(\"This is my response Json\", responseJson.data);\n        console.log(\"Get Data------>>>\", responseJson.data.posts[0]); //  var token = responseJson.data.token;\n        // var message = responseJson.message;\n        // var userId = responseJson.data.userId;\n\n        var message = responseJson.data.message;\n        data = responseJson.data.posts;\n        alert(message);\n\n        if (message === \"Fetched sucessfull\") {\n          this.props.history.push('/Home');\n        } // if (message === 'User Not Found !' || message === ' Email or Password wrong!' || message === 'Register Please!') {\n        //          } else  {\n        //         (message === 'undefined')\n        //          console.log(\"Homepage\");\n        //          console.log('token'+token);\n        //        //  this.props.navigation.navigate('HomePage',{token: token,user:user});\n        //     }\n\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.state = {\n      data\n    };\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.students[0]);\n    return header.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  renderTableData() {\n    return this.state.data.map((student, index) => {\n      const {\n        name,\n        age,\n        place,\n        gender\n      } = data; //destructuring\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, age), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, place), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, gender));\n    });\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(HomeHeader, {\n      clickhome: () => this.onPostHome(),\n      click: () => this.onPost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      onClick: this.getData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Get Data\"), React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.renderTableHeader()), this.renderTableData()))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/lntinfotech/Desktop/ReactWorkspace/react-test/src/Views/Get/Get.js"],"names":["React","Component","HomeHeader","Footer","axios","data","HomePage","constructor","onPost","props","history","push","getData","alert","get","method","headers","then","responseJson","console","log","posts","message","catch","error","state","renderTableHeader","header","Object","keys","students","map","key","index","toUpperCase","renderTableData","student","name","age","place","gender","render","onPostHome"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Get.css';\nimport HomeHeader from '../Header/HomeHeader'\nimport Footer from '../Footer/Footer'\nimport axios from 'axios'\nvar data = [];\nclass HomePage extends Component {\nconstructor() {\nsuper();\nthis.state = {\n    data\n};\n\n\n}\n\nonPost = () => {\n    this.props.history.push('/Post')\n  }\n\n  getData = () => {\n      alert(\"loading\")\n      axios.get('http://localhost:8000/route/posts', {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json',\n        },\n    })\n        .then((responseJson) => {\n            console.log(\"This is my response Json\", responseJson.data)\n            console.log(\"Get Data------>>>\", responseJson.data.posts[0])\n            //  var token = responseJson.data.token;\n            // var message = responseJson.message;\n            // var userId = responseJson.data.userId;\n           \n            var message = responseJson.data.message;\n            data = responseJson.data.posts\n            alert(message)\n            if (message === \"Fetched sucessfull\") {\n                this.props.history.push('/Home')\n            }\n            // if (message === 'User Not Found !' || message === ' Email or Password wrong!' || message === 'Register Please!') {\n            //          } else  {\n            //         (message === 'undefined')\n            //          console.log(\"Homepage\");\n            //          console.log('token'+token);\n            //        //  this.props.navigation.navigate('HomePage',{token: token,user:user});\n            //     }\n\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n}\n  \nrenderTableHeader() {\n    let header = Object.keys(this.state.students[0])\n    return header.map((key, index) => {\n       return <th key={index}>{key.toUpperCase()}</th>\n    })\n }\n\n renderTableData() {\n    return this.state.data.map((student, index) => {\n       const { name, age, place, gender } = data //destructuring\n       return (\n          <tr>\n             <td>{name}</td>\n             <td>{age}</td>\n             <td>{place}</td>\n             <td>{gender}</td>\n          </tr>\n       )\n    })\n }\n  \nrender() {\n     \n// NOTE: I use data-attributes for easier E2E testing\n// but you don't need to target those (any css-selector will work)\nreturn (\n  <div >\n  <HomeHeader clickhome={() => this.onPostHome()} \n  click={() => this.onPost()} />\n         <div>\n            <h1 id='title' onClick={this.getData}>Get Data</h1>\n            <table id='students'>\n               <tbody>\n                  <tr>{this.renderTableHeader()}</tr>\n                  {this.renderTableData()}\n               </tbody>\n            </table>\n         </div>\n<Footer/>\n</div>\n);\n}\n}\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}