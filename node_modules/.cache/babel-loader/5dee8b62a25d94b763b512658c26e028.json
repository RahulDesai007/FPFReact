{"ast":null,"code":"'use strict';\n\nmodule.exports = function (moment) {\n  if (typeof moment !== 'function') throw new TypeError('You must provide a valid moment object');\n  var localField = typeof moment().locale === 'function' ? 'locale' : 'lang',\n      hasLocaleData = !!moment.localeData;\n  if (!hasLocaleData) throw new TypeError('The Moment localizer depends on the `localeData` api, please provide a moment object v2.2.0 or higher');\n\n  function getMoment(culture, value, format) {\n    return culture ? moment(value, format)[localField](culture) : moment(value, format);\n  }\n\n  function endOfDecade(date) {\n    return moment(date).add(10, 'year').add(-1, 'millisecond').toDate();\n  }\n\n  function endOfCentury(date) {\n    return moment(date).add(100, 'year').add(-1, 'millisecond').toDate();\n  }\n\n  return {\n    formats: {\n      date: 'L',\n      time: 'LT',\n      default: 'lll',\n      header: 'MMMM YYYY',\n      footer: 'LL',\n      weekday: function (day, culture) {\n        return moment()[localField](culture).weekday(day).format('dd');\n      },\n      dayOfMonth: 'DD',\n      month: 'MMM',\n      year: 'YYYY',\n      decade: function (date, culture, localizer) {\n        return localizer.format(date, 'YYYY', culture) + ' - ' + localizer.format(endOfDecade(date), 'YYYY', culture);\n      },\n      century: function (date, culture, localizer) {\n        return localizer.format(date, 'YYYY', culture) + ' - ' + localizer.format(endOfCentury(date), 'YYYY', culture);\n      }\n    },\n    firstOfWeek: function (culture) {\n      return moment.localeData(culture).firstDayOfWeek();\n    },\n    parse: function (value, format, culture) {\n      return getMoment(culture, value, format).toDate();\n    },\n    format: function (value, format, culture) {\n      return getMoment(culture, value).format(format);\n    }\n  };\n};","map":{"version":3,"sources":["/home/lntinfotech/Desktop/HDFC_POC/Rect-UI/node_modules/react-widgets-moment-localizer/index.js"],"names":["module","exports","moment","TypeError","localField","locale","hasLocaleData","localeData","getMoment","culture","value","format","endOfDecade","date","add","toDate","endOfCentury","formats","time","default","header","footer","weekday","day","dayOfMonth","month","year","decade","localizer","century","firstOfWeek","firstDayOfWeek","parse"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\n\r\nmodule.exports = function(moment){\r\n  if (typeof moment !== 'function')\r\n    throw new TypeError('You must provide a valid moment object')\r\n\r\n  var localField = typeof moment().locale === 'function' ? 'locale' : 'lang'\r\n    , hasLocaleData = !!moment.localeData;\r\n\r\n  if ( !hasLocaleData )\r\n    throw new TypeError(\r\n      'The Moment localizer depends on the `localeData` api, please provide a moment object v2.2.0 or higher')\r\n\r\n  function getMoment(culture, value, format){\r\n    return culture ? moment(value, format)[localField](culture) : moment(value, format)\r\n  }\r\n  \r\n  function endOfDecade(date) {\r\n    return moment(date).add(10, 'year').add(-1, 'millisecond').toDate()\r\n  }\r\n\r\n  function endOfCentury(date) {\r\n    return moment(date).add(100, 'year').add(-1, 'millisecond').toDate()\r\n  }\r\n\r\n  return {\r\n    formats: {\r\n      date: 'L',\r\n      time: 'LT',\r\n      default: 'lll',\r\n      header: 'MMMM YYYY',\r\n      footer: 'LL',\r\n      weekday: function(day, culture) {\r\n        return moment()[localField](culture).weekday(day).format('dd')\r\n      },\r\n\r\n      dayOfMonth: 'DD',\r\n      month: 'MMM',\r\n      year: 'YYYY',\r\n\r\n      decade: function(date, culture, localizer) {\r\n        return localizer.format(date, 'YYYY', culture)\r\n          + ' - ' + localizer.format(endOfDecade(date), 'YYYY', culture)\r\n      },\r\n\r\n      century: function(date, culture, localizer) {\r\n        return localizer.format(date, 'YYYY', culture)\r\n          + ' - ' + localizer.format(endOfCentury(date), 'YYYY', culture)\r\n      }\r\n    },\r\n\r\n    firstOfWeek: function(culture) {\r\n      return moment.localeData(culture).firstDayOfWeek()\r\n    },\r\n\r\n    parse: function(value, format, culture) {\r\n      return getMoment(culture, value, format).toDate()\r\n    },\r\n\r\n    format: function(value, format, culture) {\r\n      return getMoment(culture, value).format(format)\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}