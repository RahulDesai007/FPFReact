{"ast":null,"code":"var _jsxFileName = \"/home/lntinfotech/Desktop/HDFC_POC/Rect-UI/src/Views/Get/Get.js\";\nimport React, { Component } from 'react';\nimport './Get.css';\nimport HomeHeader from '../Header/HomeHeader';\nimport Footer from '../Footer/Footer';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nvar data = [];\nvar index;\nvar token;\nconst display = {\n  display: 'block'\n};\nconst hide = {\n  display: 'none'\n};\n\nclass HomePage extends Component {\n  constructor() {\n    super();\n\n    this.onPost = token => {\n      this.props.history.push('/Post');\n    };\n\n    this.onGet = () => {\n      alert(\"You are already in get page\");\n    };\n\n    this.onPostHome = token => {\n      this.props.history.push('/Home');\n    };\n\n    this.onlogout = () => {\n      this.props.history.push('/Login');\n    };\n\n    this.onDelete = token => {\n      this.props.history.push('/Delete');\n    };\n\n    this.handleTableData = (personIndex, Value) => {\n      console.log(\"Index---->\", personIndex, Value);\n\n      const getAlert = () => React.createElement(SweetAlert, {\n        title: \"Here's a message!\",\n        onConfirm: this.onConfirm,\n        onCancel: this.onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      data,\n      toggle: false,\n      title: ['Name', 'Age', 'Place', 'Gender']\n    };\n  }\n\n  toggle(event) {\n    this.setState(prevState => ({\n      toggle: !prevState.toggle\n    }));\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/route/posts', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'content-type': 'application/json',\n        'authorization': token\n      }\n    }).then(responseJson => {\n      console.log(\"This is my response Json\", responseJson.data);\n      console.log(\"Get Data------>>>\", responseJson.data.posts); //  var token = responseJson.data.token;\n      // var message = responseJson.message;\n      // var userId = responseJson.data.userId;\n\n      this.setState({\n        data: responseJson.data.posts\n      });\n      console.log(\"data\", data);\n      var message = responseJson.data.message; // if (message === 'User Not Found !' || message === ' Email or Password wrong!' || message === 'Register Please!') {\n      //          } else  {\n      //         (message === 'undefined')\n      //          console.log(\"Homepage\");\n      //          console.log('token'+token);\n      //        //  this.props.navigation.navigate('HomePage',{token: token,user:user});\n      //     }\n    }).catch(error => {\n      console.error(error);\n      swal({\n        title: \"Session Expired\",\n        text: \"Please Loging Again\",\n        icon: \"warning\",\n        timer: 5000,\n        button: false\n      });\n    });\n  }\n\n  renderTableHeader() {\n    var header = ['Name'];\n    console.log(\"header---->\", header);\n    return header.map(header => {\n      return React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, header);\n    });\n  }\n\n  renderTableData() {\n    return this.state.data.map((data, index) => {\n      console.log(\"Index--->\", index);\n      const {\n        name,\n        age,\n        place,\n        gender\n      } = data; //destructuring\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => this.handleTableData(index, data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, name));\n    });\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(HomeHeader, {\n      click: () => this.onPost(token),\n      clickhome: () => this.onPostHome(token),\n      clickget: () => this.onGet(),\n      clickdelete: () => this.onDelete(token),\n      logout: () => this.onlogout(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Get Data\"), React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.renderTableHeader()), this.renderTableData()))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/lntinfotech/Desktop/HDFC_POC/Rect-UI/src/Views/Get/Get.js"],"names":["React","Component","HomeHeader","Footer","axios","swal","SweetAlert","data","index","token","display","hide","HomePage","constructor","onPost","props","history","push","onGet","alert","onPostHome","onlogout","onDelete","handleTableData","personIndex","Value","console","log","getAlert","onConfirm","onCancel","toggle","bind","state","title","event","setState","prevState","componentDidMount","get","method","headers","then","responseJson","posts","message","catch","error","text","icon","timer","button","renderTableHeader","header","map","renderTableData","name","age","place","gender","cursor","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Get.css';\nimport HomeHeader from '../Header/HomeHeader'\nimport Footer from '../Footer/Footer'\nimport axios from 'axios'\nimport swal from 'sweetalert';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nvar data = [];\nvar index\nvar token\nconst display = {\n    display: 'block'\n  };\n  const hide = {\n    display: 'none'\n  };\nclass HomePage extends Component {\n    constructor() {\n        super();\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            data ,\n            toggle: false,\n            title: ['Name', 'Age', 'Place', 'Gender']\n        };\n\n\n    }\n    toggle(event) {\n        this.setState((prevState) => ({\n          toggle: !prevState.toggle\n        }));\n      }\n    onPost = (token) => {\n        this.props.history.push('/Post')\n    }\n\n    onGet = () => {\n        alert(\"You are already in get page\")\n    }\n\n    onPostHome = (token) => {\n        this.props.history.push('/Home')\n    }\n\n    onlogout = () => {\n        this.props.history.push('/Login')\n    }\n\n    onDelete = (token) => {\n        this.props.history.push('/Delete')\n    }\n    handleTableData = (personIndex, Value) => {\n      console.log(\"Index---->\", personIndex, Value )\n      const getAlert = () => (\n      <SweetAlert title=\"Here's a message!\" onConfirm={this.onConfirm} onCancel={this.onCancel} /> \n      )\n      }\n    \n    componentDidMount() {\n\n        axios.get('http://localhost:8000/route/posts', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'content-type': 'application/json',\n                'authorization' : token\n            },\n        })\n            .then((responseJson) => {\n                console.log(\"This is my response Json\", responseJson.data)\n                console.log(\"Get Data------>>>\", responseJson.data.posts)\n                //  var token = responseJson.data.token;\n                // var message = responseJson.message;\n                // var userId = responseJson.data.userId;\n                this.setState(\n                {data :  responseJson.data.posts}\n                )\n                console.log(\"data\", data)\n               \n                var message = responseJson.data.message;\n                // if (message === 'User Not Found !' || message === ' Email or Password wrong!' || message === 'Register Please!') {\n                //          } else  {\n                //         (message === 'undefined')\n                //          console.log(\"Homepage\");\n                //          console.log('token'+token);\n                //        //  this.props.navigation.navigate('HomePage',{token: token,user:user});\n                //     }\n\n            })\n            .catch((error) => {\n                console.error(error);\n                swal({\n                    title: \"Session Expired\",\n                    text: \"Please Loging Again\",\n                    icon: \"warning\",\n                    timer: 5000,\n                    button: false\n                  })\n            });\n    }\n\n\n\n\n    renderTableHeader() {\n        var header = ['Name']\n        console.log(\"header---->\", header)\n        return header.map((header) => {\n            return <th>{header}</th>\n        })\n    }\n\n    renderTableData() {\n        return this.state.data.map((data, index) => {\n            console.log(\"Index--->\", index)\n            const { name, age, place, gender } = data //destructuring\n            return (\n                <tr>\n                    <td style={{cursor:'pointer'}} onClick={() => this.handleTableData(index, data)}>{name}</td>\n                    {/* <td>{age}</td>\n                    <td>{place}</td>\n                    <td>{gender}</td> */}\n                </tr>\n            )\n        })\n    }\n\n    render() {\n        // NOTE: I use data-attributes for easier E2E testing\n        // but you don't need to target those (any css-selector will work)\n   \n        return (\n            \n            <div >\n                <HomeHeader\n                    click={() => this.onPost(token)}\n                    clickhome={() => this.onPostHome(token)}\n                    clickget={() => this.onGet()}\n                    clickdelete={() => this.onDelete(token)}\n                    logout={() => this.onlogout()} />\n                <div>\n                   \n                    <h1 id='title' >Get Data</h1>\n                    <table id='students'>\n                        <tbody>\n                            <tr>{this.renderTableHeader()}</tr>\n                            {this.renderTableData()}\n                        </tbody>\n                    </table>\n                </div>\n                <div>\n       \n      \n      </div>\n                \n                <Footer />\n            </div>\n        );\n    }\n}\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}